// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  username      String
  password      String
  name          String
  code          String   @unique
  refererCode   String
  role          String   @default("user")
  discount      Int?
  events        Event[]
  points        Point[]
  transactions  Transaction[]
  comments      Comment[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Transaction {
  id            Int     @id @default(autoincrement())
  user          User    @relation(fields: [userId], references: [id])
  userId        Int
  event         Event?  @relation(fields: [eventId], references: [id])
  eventId       Int?    
  points        Point?  @relation(fields: [pointsId], references: [id])
  pointsId      Int?
  checkOut      Int
  createdAt     DateTime @default(now())
}

model Event {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  title         String
  date          DateTime
  price         Int?     @default(0)
  location      String?  @default("")
  description   String?  @default("")
  seat          Int?     @default(0)
  rate          Int?     @default(0)
  transactions  Transaction[]
  comments      Comment[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Point {
  id             Int       @id @default(autoincrement())
  user           User      @relation(fields: [userId], references: [id])
  userId         Int
  amount         Int
  rupiah         Int       @default(0)  
  changeType     String
  transactions   Transaction[]
  createdAt      DateTime  @default(now())
}

model Comment {
  id             Int       @id @default(autoincrement())
  user           User      @relation(fields: [userId], references: [id])
  userId         Int
  username       String
  event          Event     @relation(fields: [eventId], references: [id])
  eventId        Int
  comment        String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}